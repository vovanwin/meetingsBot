package handlers

import (
	"github.com/vovanwin/meetingsBot/internal/store/gen"
	"github.com/vovanwin/meetingsBot/internal/telegramBoll/keyboards"
	"go.uber.org/zap"
	"gopkg.in/telebot.v4"
)

type Handlers struct {
	*TelegramBot
	db *gen.Database
}

func NewHandlers(bot *TelegramBot, db *gen.Database) *Handlers {
	return &Handlers{
		TelegramBot: bot,
		db:          db,
	}
}
func (h *Handlers) RegisterAdminHandlers() {
	// –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Å–±–æ—Ä–∞
	h.Bot.Handle("/new_event", func(c telebot.Context) error {
		h.Lg.Debug("–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–±—ã—Ç–∏—è new_event")
		// –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–Ω–æ–ø–∫–∞–º–∏
		return c.Send(
			"üèê –ù–æ–≤—ã–π —Å–±–æ—Ä —Å–æ–∑–¥–∞–Ω!\n"+
				"–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –∑–∞–ø–∏—Å–∞—Ç—å—Å—è:",
			keyboards.EventKeyboard("1"),
		)
	})

	// –ü—Ä–∏–º–µ—Ä –ø—Ä–æ—Å—Ç–æ–≥–æ —Ö–µ–Ω–¥–ª–µ—Ä–∞
	h.Bot.Handle("/start", func(c telebot.Context) error {
		h.Lg.Debug("–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–±—ã—Ç–∏—è start")
		return c.Send("–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç ü§ñ")
	})

	h.Bot.Handle(telebot.OnText, func(c telebot.Context) error {
		user := c.Sender()
		text := c.Text()
		chat := c.Chat()

		// –ü—Ä–∏–º–µ—Ä –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –ø—Ä–æ–≤–µ—Ä–∫–∏
		zap.L().Info("–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ",
			zap.String("user", user.Username),
			zap.Int64("user_id", user.ID),
			zap.Int64("chat_id", chat.ID),
			zap.String("text", text),
		)

		// –ü—Ä–∏–º–µ—Ä –ø—Ä–æ—Å—Ç–æ–π —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
		if text == "–∑–∞–ø—Ä–µ—â–µ–Ω–Ω–æ–µ —Å–ª–æ–≤–æ" {
			// —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ
			_ = c.Delete()
			// –ø—Ä–µ–¥—É–ø—Ä–µ–¥–∏—Ç—å
			return c.Send("–ù–µ–ª—å–∑—è –ø–∏—Å–∞—Ç—å –∑–∞–ø—Ä–µ—â—ë–Ω–Ω—ã–µ —Å–ª–æ–≤–∞!")
		}

		// –º–æ–∂–Ω–æ –Ω–∏—á–µ–≥–æ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å, –µ—Å–ª–∏ –Ω–µ –Ω—É–∂–Ω–æ
		return nil
	})
}
