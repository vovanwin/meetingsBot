package handlers

import (
	"context"
	"github.com/vovanwin/meetingsBot/internal/telegramBoll/dto"
	"go.uber.org/zap"
	"gopkg.in/telebot.v4"

	"github.com/vovanwin/meetingsBot/internal/telegramBoll/keyboards"
	"github.com/vovanwin/meetingsBot/internal/telegramBoll/repository"
)

type Handlers struct {
	*TelegramBot
	rep *repository.Repo
}

var (
	payMarkup     = telebot.ReplyMarkup{}
	btnFree       = payMarkup.Data("–ë–µ—Å–ø–ª–∞—Ç–Ω–æ", "TYPE_PAY", dto.TypePay–ë–µ—Å–ø–ª–∞—Ç–Ω–æ.String())
	btnSplitEqual = payMarkup.Data("–†–∞–∑–¥–µ–ª–∏—Ç—å –Ω–∞ –≤—Å–µ–º", "TYPE_PAY", dto.TypePay–ü–æ—Ä–æ–≤–Ω—É.String())
	btnFixedPer   = payMarkup.Data("–§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–∞", "TYPE_PAY", dto.TypePay–§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è.String())
)

func NewHandlers(bot *TelegramBot, rep *repository.Repo) *Handlers {
	payMarkup.Inline(
		payMarkup.Row(btnFree, btnSplitEqual, btnFixedPer),
	)

	handlers := &Handlers{
		TelegramBot: bot,
		rep:         rep,
	}

	go handlers.StartActiveMeetingsUpdater()
	go handlers.StartUpdateMessageInChat()

	return handlers
}

func (h *Handlers) start(c telebot.Context) error {
	h.Lg.Debug("–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–±—ã—Ç–∏—è start")
	ctx := context.Background()
	h.rep.CreateUser(ctx, dto.CreateUser{
		ID:       c.Sender().ID,
		Username: c.Sender().Username,
	})

	c.Send("–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç ü§ñ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≤—Å—Ç—Ä–µ—á –∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤")
	rules := `üìå –ü—Ä–∞–≤–∏–ª–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞:

			 1. –î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≤—Å—Ç—Ä–µ—á–∏:
			    - –ë–æ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω –≤ —á–∞—Ç —Å –ø—Ä–∞–≤–∞–º–∏ –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π
			    - –°–æ–∑–¥–∞—Ç–µ–ª—å –≤—Å—Ç—Ä–µ—á–∏ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º —á–∞—Ç–∞

			 2. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤—Å—Ç—Ä–µ—á–∏:
			    - –£–∫–∞–∂–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –≤—Å—Ç—Ä–µ—á–∏
			    - –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –æ–ø–ª–∞—Ç—ã (–±–µ—Å–ø–ª–∞—Ç–Ω–æ/–ø–ª–∞—Ç–Ω–æ)
			    - –î–ª—è –ø–ª–∞—Ç–Ω—ã—Ö –≤—Å—Ç—Ä–µ—á —É–∫–∞–∂–∏—Ç–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å:
			      ‚Ä¢ –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è - –æ–¥–∏–Ω–∞–∫–æ–≤–∞—è –¥–ª—è –≤—Å–µ—Ö
			      ‚Ä¢ –ü–æ–¥–µ–ª–µ–Ω–Ω–∞—è - —Å—Ç–æ–∏–º–æ—Å—Ç—å –¥–µ–ª–∏—Ç—Å—è –º–µ–∂–¥—É —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏

			 3. –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ —á–∞—Ç:
			    - –í—Å—Ç—Ä–µ—á—É –º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–æ–ª—å–∫–æ –≤ —á–∞—Ç—ã, –≥–¥–µ –≤—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä`

	err := h.Bot.SetCommands([]telebot.Command{
		{Text: "start", Description: "–ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É"},
		{Text: "create", Description: "–°–æ–∑–¥–∞—Ç—å –≤—Å—Ç—Ä–µ—á—É"},
		{Text: "edit", Description: "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –≤—Å—Ç—Ä–µ—á—É"},
		{Text: "admin", Description: "–ê–¥–º–∏–Ω—Å—Ç—Ä–∞—Ç–æ—Ä—Å–∫–∏–µ –∫–æ–º–∞–Ω–¥—ã"},
	}, &telebot.CommandScope{Type: telebot.CommandScopeAllPrivateChats})
	if err != nil {
		h.Lg.Error("–ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–æ–º–∞–Ω–¥—ã", zap.Error(err))
	}

	return c.Send(rules, keyboards.EventStartKeyboard())
}
